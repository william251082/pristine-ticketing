kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission

Accessing Env Variables in a Pod
imperative approach, instead of writing a config file(declarative)
kubectl create secret generic jwt-secret --from-literal=JWT_KEY=asdf
kubectl get secrets
kubectl describe pods <name_of_pod>

File detection change
kubectl get pods
kubectl delete pod client-depl-85b6fb44f9-2wrph
kubectl get pods


I found out that minikube has it own docker instance

Run eval $(minikube docker-env)

Then in same terminal window run docker system df

This command will print out something like this

TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE
Images              5                   2                   16.43 MB            11.63 MB (70%)
Containers          2                   0                   212 B               212 B (100%)
Local Volumes       2                   1                   36 B                0 B (0%)
Based on this information you need to clear up resources

iceshop@iceshop-X580VD:~/Sites/microservicests/ticketing/nats-test$ npm install node-nats-streaming ts-node-dev typescript @types/node


kubectl get pods
kubectl port-forward nats-depl-78677c4455-8nqqb 4222:4222
on another terminal window:
npm run publish

npm run publish
npm run listen
rs to restart

Queue groups
-- making sure the published event is not duplicated among every service listeners


default --when service received an event, it will automatically marked as event received, leading to error data (if any), being lost
overwrite default behavior using .setManualAckMode(true);

iceshop@iceshop-X580VD:~/Sites/microservicests/ticketing$ kubectl port-forward nats-depl-78677c4455-8nqqb 8222:8222
on browser: localhost:8222/streaming
localhost:8222/streaming/channelsz?subs=1
-- help nats to understand to know a client subscription that won't ever come back
-hb -- request that nats is going to send to all connected clients every second
-hbi -- how often nats will send requests to the connected clients
-hbt -- how long each client has to respond
-hbt -- number of times the request should fail before nats will assume that the connection is gone

